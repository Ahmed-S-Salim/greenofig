var e=Object.defineProperty,a=Object.defineProperties,r=Object.getOwnPropertyDescriptors,s=Object.getOwnPropertySymbols,t=Object.prototype.hasOwnProperty,l=Object.prototype.propertyIsEnumerable,__defNormalProp=(a,r,s)=>r in a?e(a,r,{enumerable:!0,configurable:!0,writable:!0,value:s}):a[r]=s,__spreadValues=(e,a)=>{for(var r in a||(a={}))t.call(a,r)&&__defNormalProp(e,r,a[r]);if(s)for(var r of s(a))l.call(a,r)&&__defNormalProp(e,r,a[r]);return e},__spreadProps=(e,s)=>a(e,r(s));import{j as i}from"./vendor-ui-gkPPHEPH.js";import{a as n}from"./vendor-react-Dds8VpLH.js";import{D as o,a as d,b as c,c as p,d as m}from"./dialog-D_VtZS95.js";import{u as g,B as _,T as u,s as h,t as j}from"./index-CKU5P2TY.js";import{I as v}from"./input-EoRmzMlo.js";import{L as f}from"./label-qLSsZ5R6.js";import{S as x,a as y,b,c as F,d as S}from"./select-BoESt1cj.js";import{r as C}from"./vendor-utils-CisQTPNT.js";const QuickLogMeal=({onSuccess:e})=>{const{userProfile:a}=g(),[r,s]=n.useState(!1),[t,l]=n.useState(!1),[w,O]=n.useState({meal_type:"breakfast",meal_name:"",description:"",calories:"",protein_g:"",carbs_g:"",fats_g:"",date:(new Date).toISOString().split("T")[0]});return i.jsxs(o,{open:r,onOpenChange:s,children:[i.jsx(d,{asChild:!0,children:i.jsxs(_,{className:"w-full",children:[i.jsx(C,{className:"w-4 h-4 mr-2"}),"Log Meal"]})}),i.jsxs(c,{className:"max-h-[90vh] overflow-y-auto",children:[i.jsx(p,{children:i.jsx(m,{children:"Log Your Meal"})}),i.jsxs("form",{onSubmit:r=>{return t=null,i=null,n=function*(){r.preventDefault(),l(!0);try{const r={user_id:a.id,meal_type:w.meal_type,meal_name:w.meal_name,description:w.description,calories:w.calories?parseInt(w.calories):null,protein_g:w.protein_g?parseFloat(w.protein_g):null,carbs_g:w.carbs_g?parseFloat(w.carbs_g):null,fats_g:w.fats_g?parseFloat(w.fats_g):null,date:w.date},{error:t}=yield h.from("meal_logs").insert(r);if(t)throw t;if(w.calories){const{data:e}=yield h.from("daily_metrics").select("*").eq("user_id",a.id).eq("date",w.date).single(),r=((null==e?void 0:e.calories_consumed)||0)+parseInt(w.calories),s=((null==e?void 0:e.protein_g)||0)+(w.protein_g?parseFloat(w.protein_g):0),t=((null==e?void 0:e.carbs_g)||0)+(w.carbs_g?parseFloat(w.carbs_g):0),l=((null==e?void 0:e.fats_g)||0)+(w.fats_g?parseFloat(w.fats_g):0);e?yield h.from("daily_metrics").update({calories_consumed:r,protein_g:s,carbs_g:t,fats_g:l}).eq("id",e.id):yield h.from("daily_metrics").insert({user_id:a.id,date:w.date,calories_consumed:r,protein_g:s,carbs_g:t,fats_g:l})}yield h.from("activity_feed").insert({user_id:a.id,activity_type:"logged_meal",activity_title:`Logged ${w.meal_type}`,activity_description:w.meal_name,metadata:{calories:w.calories?parseInt(w.calories):0}}),yield h.rpc("update_user_streak",{p_user_id:a.id,p_streak_type:"meal_log",p_activity_date:w.date}),j({title:"Meal Logged!",description:`Successfully logged ${w.meal_name||w.meal_type}`}),O({meal_type:"breakfast",meal_name:"",description:"",calories:"",protein_g:"",carbs_g:"",fats_g:"",date:(new Date).toISOString().split("T")[0]}),s(!1),e&&e()}catch(t){console.error("Error logging meal:",t),j({title:"Error",description:"Failed to log meal. Please try again.",variant:"destructive"})}finally{l(!1)}},new Promise((e,a)=>{var fulfilled=e=>{try{step(n.next(e))}catch(r){a(r)}},rejected=e=>{try{step(n.throw(e))}catch(r){a(r)}},step=a=>a.done?e(a.value):Promise.resolve(a.value).then(fulfilled,rejected);step((n=n.apply(t,i)).next())});var t,i,n},className:"space-y-4",children:[i.jsxs("div",{children:[i.jsx(f,{htmlFor:"date",children:"Date"}),i.jsx(v,{id:"date",type:"date",value:w.date,onChange:e=>O(__spreadProps(__spreadValues({},w),{date:e.target.value})),max:(new Date).toISOString().split("T")[0],required:!0})]}),i.jsxs("div",{children:[i.jsx(f,{htmlFor:"meal_type",children:"Meal Type *"}),i.jsxs(x,{value:w.meal_type,onValueChange:e=>O(__spreadProps(__spreadValues({},w),{meal_type:e})),children:[i.jsx(y,{children:i.jsx(b,{})}),i.jsxs(F,{children:[i.jsx(S,{value:"breakfast",children:"Breakfast"}),i.jsx(S,{value:"lunch",children:"Lunch"}),i.jsx(S,{value:"dinner",children:"Dinner"}),i.jsx(S,{value:"snack",children:"Snack"})]})]})]}),i.jsxs("div",{children:[i.jsx(f,{htmlFor:"meal_name",children:"Meal Name *"}),i.jsx(v,{id:"meal_name",placeholder:"e.g., Grilled Chicken Salad",value:w.meal_name,onChange:e=>O(__spreadProps(__spreadValues({},w),{meal_name:e.target.value})),required:!0})]}),i.jsxs("div",{children:[i.jsx(f,{htmlFor:"description",children:"Description (optional)"}),i.jsx(u,{id:"description",placeholder:"Any additional details...",value:w.description,onChange:e=>O(__spreadProps(__spreadValues({},w),{description:e.target.value})),rows:2})]}),i.jsxs("div",{className:"grid grid-cols-2 gap-4",children:[i.jsxs("div",{children:[i.jsx(f,{htmlFor:"calories",children:"Calories"}),i.jsx(v,{id:"calories",type:"number",placeholder:"500",value:w.calories,onChange:e=>O(__spreadProps(__spreadValues({},w),{calories:e.target.value}))})]}),i.jsxs("div",{children:[i.jsx(f,{htmlFor:"protein",children:"Protein (g)"}),i.jsx(v,{id:"protein",type:"number",step:"0.1",placeholder:"25",value:w.protein_g,onChange:e=>O(__spreadProps(__spreadValues({},w),{protein_g:e.target.value}))})]}),i.jsxs("div",{children:[i.jsx(f,{htmlFor:"carbs",children:"Carbs (g)"}),i.jsx(v,{id:"carbs",type:"number",step:"0.1",placeholder:"50",value:w.carbs_g,onChange:e=>O(__spreadProps(__spreadValues({},w),{carbs_g:e.target.value}))})]}),i.jsxs("div",{children:[i.jsx(f,{htmlFor:"fats",children:"Fats (g)"}),i.jsx(v,{id:"fats",type:"number",step:"0.1",placeholder:"15",value:w.fats_g,onChange:e=>O(__spreadProps(__spreadValues({},w),{fats_g:e.target.value}))})]})]}),i.jsxs("div",{className:"flex gap-2",children:[i.jsx(_,{type:"button",variant:"outline",onClick:()=>s(!1),className:"flex-1",children:"Cancel"}),i.jsx(_,{type:"submit",disabled:t,className:"flex-1",children:t?"Logging...":"Log Meal"})]})]})]})]})};export{QuickLogMeal as Q};
